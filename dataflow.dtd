<?xml version="1.0" encoding="UTF-8"?>
<!-- NOTE the XML export is currently incomplete. It only exports expressions and some statements. -->

<!DOCTYPE dataflow [
 <!ELEMENT NetworkDefinition (ValueParameterList? InputPortList? OutputPortList? DeclVarList?)>
 <!ELEMENT Actor (ValueParameterList? InputPortList? OutputPortList? DeclVarList?)>

<!-- Ports -->
<!ELEMENT InputPortList (PortDecl*)>
<!ELEMENT OutputPortTypeList (PortDecl*)>
<!ELEMENT PortDecl (TypeExpr?)>
<!ATTLIST PortDecl name CDATA #REQUIRED>

<!-- Declarations -->
<!ELEMENT DeclTypeList (DeclType*)>
<!ELEMENT DeclType >
<!ATTLIST DeclType name CDATA #REQUIRED>
 
<!ELEMENT DeclVarList (DeclVar*)>
<!ELEMENT DeclVar (InitialValue?)>
<!ATTLIST DeclVar name CDATA #REQUIRED>

<!ELEMENT InitialValue (%expression;)>

<!ELEMENT Port >
<!ATTLIST Port name CDATA #REQUIRED>
<!ATTLIST Port offset CDATA #IMPLIED>

<!-- Parameters -->
<!ELEMENT ValueParameterList (ParDeclValue*)>
<!ELEMENT ParDeclValue (TypeExpr?)>
<!ATTLIST ParDeclValue name CDATA #REQUIRED>

<!ELEMENT TypeExpr> <!-- TODO -->

<!-- Expression -->
<!ENTITY % expression "ExprApplication, ExprBinaryOp, ExprField, ExprIf, ExprIndexer, ExprInput, ExprLambda, ExprLet, ExprList, ExprLiteral, ExprMap, ExprProc, ExprSet, ExprUnaryOp, ExprVariable">
<!ELEMENT ExprApplication (Function, ArgumentList)>
<!ELEMENT ExprBinaryOp (OperationList, OperandList)>
<!ELEMENT ExprField (%expression;) Field>
<!ELEMENT ExprIf (Condition, TrueExpr, ElseExpr)>
<!ELEMENT ExprIndexer (Structure, Location)>
<!ELEMENT ExprInput PortName>
<!ATTLIST ExprInput offset CDATA #REQUIRED>
<!ATTLIST ExprInput hasRepeat (true|false) #REQUIRED>
<!ATTLIST ExprInput repeat CDATA #IMPLIED>
<!ATTLIST ExprInput patternLength CDATA #IMPLIED>
<!ELEMENT ExprLambda (ValueParameterList? ReturnType? DeclVarList? BodyExpr)>
<!ELEMENT ExprLet (DeclVarList? BodyExpr)>
<!ELEMENT ExprList (ElementList? GeneratorFilterList?)>
<!ELEMENT ExprLiteral >
<!ATTLIST ExprLiteral text CDATA #REQUIRED>
<!ELEMENT ExprMap (Maps? GeneratorFilterList?)>
<!ELEMENT ExprProc (ValueParameterList? DeclVarList? StatementList)>
<!ELEMENT ExprUnaryOp (%expression;)>
<!ATTLIST ExprVariable operation CDATA #REQUIRED>
<!ELEMENT ExprVariable >
<!ATTLIST ExprVariable text CDATA #REQUIRED>

<!ELEMENT ArgumentList (%expression;*)>
<!ELEMENT BodyExpr (%expression;)>
<!ELEMENT CollectionExpr (%expression;)>
<!ELEMENT Condition (%expression;)>
<!ELEMENT ElementList (%expression;*)>
<!ELEMENT ElseExpr (%expression;)>
<!ELEMENT Field>
<!ATTLIST Field name CDATA #REQUIRED>
<!ATTLIST Field offset CDATA #IMPLIED>
<!ELEMENT Filters (Exrtessions?)>
<!ELEMENT Function (%expression;)>
<!ELEMENT GeneratorFilter (DeclVarList?, CollectionExpr, Filters?)>
<!ELEMENT GeneratorFilterList (GeneratorFilter*)>
<!ELEMENT Location (%expression;+)
<!ELEMENT Maps (MapKey, MapValue)>
<!ELEMENT MapKey (%expression;)>
<!ELEMENT MapValue (%expression;)>
<!ELEMENT OperationList (Operation*)>
<!ELEMENT Operation >
<!ATTLIST Operation operation CDATA #REQUIRED>
<!ELEMENT OperandList (%expression;*)
<!ELEMENT ReturnType (TypeExpr)>
<!ELEMENT StatementList (%statement)*>
<!ELEMENT Structure (%expression;)>
<!ELEMENT TrueExpr (%expression;)>

<!-- Statement -->
<!ENTITY % statement "StmtAssignment, StmtBlock, StmtCall, StmtConsume, StmtForeach, StmtIf, StmtOutput, StmtWhile">
<!ELEMENT StmtAssignment %lvalue; Value)>
<!ATTLIST StmtAssignment variable CDATA #REQUIRED>
<!ELEMENT StmtBlock DeclVarList? DeclVarList? StatementList>
<!ELEMENT StmtCall Procedure ArgumentList?>
<!ELEMENT StmtConsume PortName>
<!ATTLIST StmtConsume numberOfTokens CDATA #REQUIRED>
<!ELEMENT StmtForeach Body GeneratorFilterList>
<!ELEMENT StmtIf Condition ThenBranch ElseBranch?>
<!ELEMENT StmtOutput PortName ValueList>
<!ATTLIST StmtOutput hasRepeat (true|false) #REQUIRED>
<!ATTLIST StmtOutput repeat CDATA #IMPLIED>
<!ELEMENT StmtWhile Condition Body>

<!ELEMENT Value (%expression;)>
<!ELEMENT Condition (%statement;)>
<!ELEMENT ThenBranch (%statement;)>
<!ELEMENT ElseBranch (%statement;)>
<!ELEMENT Procedure (%expression;)>
<!ELEMENT ValueList (%expression;*)
<!ELEMENT Body (%statement;)>

<!ENTITY % lvalue "LValueVariable, LValueIndexer, LValueField">
<!ELEMENT LValueVariable Variable>
<!ELEMENT LValueIndexer %lvalue; Location>
<!ELEMENT LValueField %lvalue; Field>

<!ELEMENT Variable>
<!ATTLIST Variable name CDATA #REQUIRED>
<!ATTLIST Variable level CDATA #IMPLIED>
<!ATTLIST Variable offset CDATA #IMPLIED>
 ]>