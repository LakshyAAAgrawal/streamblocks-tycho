package net.opendf.parser.lth;
/**
 *  copyright (c) 20011, Per Andersson
 *  all rights reserved
 **/

import java.io.BufferedReader;
import java.io.File;
import java.io.FileReader;
import java.io.IOException;

import beaver.Scanner;

import net.opendf.ir.cal.Actor;
import net.opendf.parser.lth.CalParser;
import net.opendf.util.PrettyPrint;

public class Parse{
	static final String usage = "Correct use: java net.opendf.parser.lth.Parse [options] path file" +
			"\nParse a CAL file and do a pretty print of the internal representation." +
			"\noptions:" +
			"\n-tokens print the sequence of tokens generated by the scanner." +
			"\nThe file name should include the file extension, i.e. 'Add.cal'";

	private static void dumpScanner(String path, String fileName){
		try {
			FileReader fr = new FileReader(path + "/" + fileName);
			Scanner scanner = new CalScanner(new BufferedReader(fr));
			System.out.println("dumping scanner token stream:");
			beaver.Symbol symbol;
			symbol = scanner.nextToken();
			while(symbol.getId() != CalParser.Terminals.EOF){
				try{
					System.out.println(CalParser.Terminals.NAMES[symbol.getId()] + " " + symbol.value);
				} catch(java.lang.ArrayIndexOutOfBoundsException e) {
					System.out.println(symbol.getId() + " " + symbol.value);
				}
				symbol = scanner.nextToken();
			}
			System.out.println("-----------------------");
		} catch (Exception e) {
			System.err.println(new java.util.Date());
			System.err.println("Exception: " + e);
			e.printStackTrace(System.err);
		}
	}

	public static void main(String[] args){
		int index = 0;
		boolean tokens = false;
		while(index<args.length && args[index].startsWith("-")){
			if(args[index].equals("-tokens")){
				tokens = true;
			} else {
				System.err.println(usage);
				return;
			}
			index++;
		}
		if(index+2 != args.length){
			System.err.println(usage);				
			return;
		}

		String path = args[index++];
		String fileName = args[index++];

		System.out.println("------- " + System.getProperty("user.dir") + "/" + path + "/" + fileName + " (" +  new java.util.Date() + ") -------");
		if(tokens){
			dumpScanner(path, fileName);
		}
		CalParser parser = new CalParser();
		Actor actor = parser.parse(path, fileName);
		parser.printParseProblems();
		if(parser.parseProblems.isEmpty()){
			PrettyPrint pp = new PrettyPrint();
			pp.print(actor);
		}
		System.out.println("---- done ---");
	}
}