actor Filter () int(size=8) FIn ==> int(size=8) FOut :
	function p(int(size=8) x) --> bool : x >= 0 end

	int(size=8) x;

	repeat
		FIn --> x;
		if p(x) then
			FOut <-- x;
		end
	end
end

actor Map () int(size=8) MIn ==> int(size=8) MOut :
	function f(int(size=8) x) --> int(size=8) : -x end

	int(size=8) x;
	repeat
		MIn --> x;
		MOut <-- f(x);
	end
end

network FilterMap () int(size=8) NIn ==> int(size=8) NOut :
entities
	filter = Filter();
	map_ = Map();
structure
	NIn --> filter.FIn;
	filter.FOut --> map_.MIn {buffersize=1;composition="filtermap";};
	map_.MOut --> NOut;
end